import matplotlib.pyplot as plt
import numpy as np

plt.rcParams['font.family'] = 'SimSun'

# A、B、C、D公司投标价，这里保持固定示例数据，你也可考虑设置为可输入修改
A公司投标价 = 420
B公司投标价 = 465
C公司投标价 = 463
D公司投标价 = 453

# 配置部分，可在此处修改相关设置参数和计算公式函数
# 基准价比例，初始设置为90%，可修改
基准价比例 = 0.9
# 偏差率计算公式，默认是按照之前给定规则，可修改下面这个函数体内容来改变计算公式
def 计算偏差率(E公司投标价, 基准报价):
    return (E公司投标价 - 基准报价) / 基准报价 * 100
# 基准报价计算公式，默认按照之前平均价乘以比例的规则，可修改下面这个函数体内容改变计算公式
def 计算基准报价(E公司投标价):
    平均报价 = (A公司投标价 + B公司投标价 + C公司投标价 + D公司投标价 + E公司投标价) / 5
    return 基准价比例 * 平均报价


# 计算价格得分P的函数，基于偏差率K来计算，可根据规则修改内部逻辑
def 计算价格得分(E公司投标价):
    基准报价 = 计算基准报价(E公司投标价)
    偏差率 = 计算偏差率(E公司投标价, 基准报价)
    if E公司投标价 >= 基准报价:
        return 100 - (偏差率 * 100 * 0.5)
    return 100 + (偏差率 * 100 * 0.5)

# 计算最终得分F的函数
def 计算最终得分(E公司投标价):
    return 计算价格得分(E公司投标价) * 0.35

# 生成投标价范围，这里以300到500为例，间隔为1，可按需修改范围
E公司投标价范围 = np.arange(300, 501, 1)
最终得分列表 = [计算最终得分(e_price) for e_price in E公司投标价范围]

# 找到最高得分对应的投标价索引
最高得分索引 = np.argmax(最终得分列表)
最高得分对应的投标价 = E公司投标价范围[最高得分索引]

# 绘制折线图
plt.plot(E公司投标价范围, 最终得分列表)
plt.xlabel('E公司投标价')
plt.ylabel('最终得分')
plt.title('最终得分与E公司投标价关系图')

# 在图中标注最高点
plt.annotate(f'最高得分对应投标价为{最高得分对应的投标价}', xy=(最高得分对应的投标价, 最终得分列表[最高得分索引]), xytext=(最高得分对应的投标价 + 10, 最终得分列表[最高得分索引] + 0.5),
             arrowprops=dict(facecolor='black', arrowstyle='->'))

plt.show()